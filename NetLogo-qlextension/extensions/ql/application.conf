
netlogo {

  # names of agent-variables
  ## name of alternatives list
  alternatives-list = "alternatives"
  ## name of Q-values list
  q-values-list = "q-values"
  ## name of frequencies list
  frequencies-list = "frequencies"
  ## name of the exploration rate
  exploration-rate = "exploration-rate"
  ## name of the exploration method
  exploration-method = "exploration-method"
  ## name of gamma parameter
  gamma = "gamma"
  ## name of state parameter
  state = "state"
  
  # default values of agent-variables
  default-exploration-rate = 0.05
  default-exploration-method = "epsilon-greedy"
  
  # NetLogo needs to block occasionally until Akka has finished calculations, e.g. until data (list of NLGroupChoices) has arrived
  # this timeout (in milliseconds) may be set to higher values
  timeout_ms = 10000
  
  # in parallel-mode several headless instances of NetLogo are started that work concurrently
  enable-parallel-mode = false
  
  # these parameters are only needed in parallel-mode
  parallel {
    
    # number of concurrently working headless NetLogo workspaces
    # must be at least 1, there may be a maximum (depends on number of threads available - see default-dispatcher)
    # it makes little sense to use many headless NetLogos if they cannot work concurrently
    headless-workspaces = 2
    
    # name of reporter used to calculate the rewards for choices
    reward-reporter-name = "get-rewards"
    # name of reporter that can be used to define a dynamic group structure
    group-reporter-name = "get-groups"
    # name of command used to update after each tick
    update-command-name = "update"
    
    # all additional jars that must be loaded by NetLogo
    additional-jars = ["extensions/games/games.jar",
                       "extensions/games/gamut.jar"]
                       
    enable-performance-measures = false
  }
     
}

akka {
  loglevel = "INFO"
  actor {
    default-dispatcher {
    
      executor = "fork-join-executor"

      # This will be used if you have set "executor = "fork-join-executor""
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1

        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 3.0

        # Max number of threads to cap factor-based parallelism number to
        # must be at least 2 for the ql-extension to work
        parallelism-max = 12
      }
      
      throughput = 5
    }
  }
}